TPA	EQU	0100H		;CPM TPA
BDOS	EQU	0005H		;BDOS PROC CALL
B$COUT	EQU	01H		;BDOS CHAR OUT PROC ID
B$PRINT	EQU	09H		;BDOS PRINT PROC ID
*
CR	EQU	0DH
LF	EQU	0AH
TERM	EQU	'$'
*
SLOT		EQU	1			;SIO BOARD SLOT
SLOT$ID$REG	EQU	070H + (6 - SLOT)	;SLOT ID REGISTER
*
SIO$ID		EQU	0F7H			;SERIAL ID
SIO$REG		EQU	(6 - SLOT) * 010H	;SET FOR SIO BOARD
SIO$BAUD	EQU	SIO$REG+8		;BAUD RATE REG
SIO$DATA	EQU	SIO$REG			;USART DATA ADDR
SIO$CTRL	EQU	SIO$REG+1		;USART CONTROL/STATUS
BAUD$RATE	EQU	127			;BAUD RATE OF 19.2K
*
*
*CHECK IF A SERIAL CARD IS PRESENT IN SLOT 1, IF IT IS, START READING
*CHARACTERS FROM THE DEVICE AND PRINTING THE TO THE CONSOLE. FOREVER, OR UNTIL
*<CTRL+C> IS PRESSED.
*
	ORG	TPA
MAIN:	CALL	SIO$CHK		;CHECK IF THE SIO BOARD PRESENT IN SLOT
	JNZ	NO$BOARD	;IF IT ISNT FOUND, THROW AN ERROR
	CALL	SIO$INIT	;CHECK IF SERIAL IS PRESENT
LOOP:	CALL	SIO$CINA	;GET CHARACTER FROM SERIAL
	MVI	E,A		;STORE CHARACTER IN E FOR PRINT
	CALL	PUTCH		;OUTPUT A CHARACTER TO THE TERMINAL
	JMP	LOOP		;LOOP FOREVER
EXIT:	RST	0		;CPM WARMBOOT
*
NO$BOARD:
	LXI	D,NO$BOARD$ERROR	;LOAD THE ERROR MESSAGE
	CALL	PRINT			;PRINT THE MESSAGE
	JMP	EXIT			;ABORT THE PROGRAM
*
*
*	CONSOLE INPUT OUTPUT ROUTINES
PUTCH:	;E=CHARACTER TO PRINT
	MVI	C,B$COUT	;BDOS PRINT CHARACTER ROUTINE ID
	CALL	BDOS		;PRINT THE CHARACTER IN E REG
	RET
*
PRINT:	;DE=STRING TO PRINT '$' TERMINATED
	MVI	C,B$PRINT	;BDOS PRINT STRING ROUTINE ID
	CALL	BDOS		;PRITN THE STRING IN DE REG
	RET
*
*
*	SERIAL INPUT OUTPUT ROUTINES
SIO$CINA:
	IN	SIO$CTRL	;CHECK STATUS
	ANI	0$0000$0010B	;GET RXREADY BIT
	JNZ	SIO$CINA	;WAIT TILL CHARACTER IS READY
	IN	SIO$DATA	;GRAB CHARACTER
	ANI	0$0111$1111B	;MASK OFF TOP BIT
	RET
*
SIO$COUTA:
	IN	SIO$CTRL	;CHECK STATUS
	ANI	0$0000$0001B	;GET TXREADY BIT
	JNZ	SIO$COUTA	;WAIT TILL CHARACTER IS READY
	MOV	A,B		;OUTPUT CHAR IS IN REG B
	OUT	SIO$DATA	;OUTPUT CHARACTER
	RET
*
*	SIO INITIALIZATION ROUTINE
*
SIO$INIT:
	MVI	A,BAUD$RATE
	OUT	SIO$BAUD	;SET BAUD RATE
*
*	INTERUPT MASKS ARE CLEARED AT POWER UP
*
	MVI	A,0$0000$0011B	;GIVE USART COMMANDS
	OUT	SIO$CTRL	;TO RESET
	OUT	SIO$CTRL
	MVI	A,0$0100$0000B
	OUT	SIO$CTRL
	MVI	A,0$1100$1110B	;GIVE MODE COMMAND
	OUT	SIO$CTRL	;2 STOP BITS, 16*CLK,
	MVI	A,0$0010$0111B	;GIVE COMMAND
	OUT	SIO$CTRL	;CMD: RTS,ER,RXF,DTR,TXEN
	CALL	SIO$INJNK	;READ JUNK TWICE
SIO$INJNK:
	IN	SIO$DATA
	RET
*
*	SIO IDENTIFICATION ROUTINE
*
SIO$CHK:
	IN	SLOT$ID$REG	;READ THE BOARD ID OF SLOT
	CPI	SIO$ID		;CHECK IF THE BOARD IS AN SIO
	RET
*
*
*	DATA "SEGMENT"
NO$BOARD$ERROR:
	DB	'NO SIO BOARD FOUND',CR,LF,TERM

*
	END
